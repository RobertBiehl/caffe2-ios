// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: caffe2/proto/caffe2_legacy.proto

#ifndef PROTOBUF_caffe2_2fproto_2fcaffe2_5flegacy_2eproto__INCLUDED
#define PROTOBUF_caffe2_2fproto_2fcaffe2_5flegacy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace caffe2 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_caffe2_2fproto_2fcaffe2_5flegacy_2eproto();
void protobuf_InitDefaults_caffe2_2fproto_2fcaffe2_5flegacy_2eproto();
void protobuf_AssignDesc_caffe2_2fproto_2fcaffe2_5flegacy_2eproto();
void protobuf_ShutdownFile_caffe2_2fproto_2fcaffe2_5flegacy_2eproto();


enum LegacyPadding {
  NOTSET = 0,
  VALID = 1,
  SAME = 2,
  CAFFE_LEGACY_POOLING = 3
};
bool LegacyPadding_IsValid(int value);
const LegacyPadding LegacyPadding_MIN = NOTSET;
const LegacyPadding LegacyPadding_MAX = CAFFE_LEGACY_POOLING;
const int LegacyPadding_ARRAYSIZE = LegacyPadding_MAX + 1;

const ::google::protobuf::EnumDescriptor* LegacyPadding_descriptor();
inline const ::std::string& LegacyPadding_Name(LegacyPadding value) {
  return ::google::protobuf::internal::NameOfEnum(
    LegacyPadding_descriptor(), value);
}
inline bool LegacyPadding_Parse(
    const ::std::string& name, LegacyPadding* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LegacyPadding>(
    LegacyPadding_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace caffe2

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::caffe2::LegacyPadding> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::caffe2::LegacyPadding>() {
  return ::caffe2::LegacyPadding_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_caffe2_2fproto_2fcaffe2_5flegacy_2eproto__INCLUDED
