// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: caffe2/proto/hsm.proto

#ifndef PROTOBUF_caffe2_2fproto_2fhsm_2eproto__INCLUDED
#define PROTOBUF_caffe2_2fproto_2fhsm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace caffe2 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_caffe2_2fproto_2fhsm_2eproto();
void protobuf_InitDefaults_caffe2_2fproto_2fhsm_2eproto();
void protobuf_AssignDesc_caffe2_2fproto_2fhsm_2eproto();
void protobuf_ShutdownFile_caffe2_2fproto_2fhsm_2eproto();

class HierarchyProto;
class NodeProto;
class PathNodeProto;
class PathProto;
class TreeProto;

// ===================================================================

class NodeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:caffe2.NodeProto) */ {
 public:
  NodeProto();
  virtual ~NodeProto();

  NodeProto(const NodeProto& from);

  inline NodeProto& operator=(const NodeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeProto& default_instance();

  static const NodeProto* internal_default_instance();

  void Swap(NodeProto* other);

  // implements Message ----------------------------------------------

  inline NodeProto* New() const { return New(NULL); }

  NodeProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeProto& from);
  void MergeFrom(const NodeProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeProto* other);
  void UnsafeMergeFrom(const NodeProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .caffe2.NodeProto children = 1;
  int children_size() const;
  void clear_children();
  static const int kChildrenFieldNumber = 1;
  const ::caffe2::NodeProto& children(int index) const;
  ::caffe2::NodeProto* mutable_children(int index);
  ::caffe2::NodeProto* add_children();
  ::google::protobuf::RepeatedPtrField< ::caffe2::NodeProto >*
      mutable_children();
  const ::google::protobuf::RepeatedPtrField< ::caffe2::NodeProto >&
      children() const;

  // repeated int32 word_ids = 2;
  int word_ids_size() const;
  void clear_word_ids();
  static const int kWordIdsFieldNumber = 2;
  ::google::protobuf::int32 word_ids(int index) const;
  void set_word_ids(int index, ::google::protobuf::int32 value);
  void add_word_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      word_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_word_ids();

  // optional int32 offset = 3;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // optional string name = 4;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated float scores = 5;
  int scores_size() const;
  void clear_scores();
  static const int kScoresFieldNumber = 5;
  float scores(int index) const;
  void set_scores(int index, float value);
  void add_scores(float value);
  const ::google::protobuf::RepeatedField< float >&
      scores() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_scores();

  // @@protoc_insertion_point(class_scope:caffe2.NodeProto)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::caffe2::NodeProto > children_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > word_ids_;
  ::google::protobuf::RepeatedField< float > scores_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 offset_;
  friend void  protobuf_InitDefaults_caffe2_2fproto_2fhsm_2eproto_impl();
  friend void  protobuf_AddDesc_caffe2_2fproto_2fhsm_2eproto_impl();
  friend void protobuf_AssignDesc_caffe2_2fproto_2fhsm_2eproto();
  friend void protobuf_ShutdownFile_caffe2_2fproto_2fhsm_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeProto> NodeProto_default_instance_;

// -------------------------------------------------------------------

class TreeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:caffe2.TreeProto) */ {
 public:
  TreeProto();
  virtual ~TreeProto();

  TreeProto(const TreeProto& from);

  inline TreeProto& operator=(const TreeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreeProto& default_instance();

  static const TreeProto* internal_default_instance();

  void Swap(TreeProto* other);

  // implements Message ----------------------------------------------

  inline TreeProto* New() const { return New(NULL); }

  TreeProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreeProto& from);
  void MergeFrom(const TreeProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TreeProto* other);
  void UnsafeMergeFrom(const TreeProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .caffe2.NodeProto root_node = 1;
  bool has_root_node() const;
  void clear_root_node();
  static const int kRootNodeFieldNumber = 1;
  const ::caffe2::NodeProto& root_node() const;
  ::caffe2::NodeProto* mutable_root_node();
  ::caffe2::NodeProto* release_root_node();
  void set_allocated_root_node(::caffe2::NodeProto* root_node);

  // @@protoc_insertion_point(class_scope:caffe2.TreeProto)
 private:
  inline void set_has_root_node();
  inline void clear_has_root_node();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::caffe2::NodeProto* root_node_;
  friend void  protobuf_InitDefaults_caffe2_2fproto_2fhsm_2eproto_impl();
  friend void  protobuf_AddDesc_caffe2_2fproto_2fhsm_2eproto_impl();
  friend void protobuf_AssignDesc_caffe2_2fproto_2fhsm_2eproto();
  friend void protobuf_ShutdownFile_caffe2_2fproto_2fhsm_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TreeProto> TreeProto_default_instance_;

// -------------------------------------------------------------------

class HierarchyProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:caffe2.HierarchyProto) */ {
 public:
  HierarchyProto();
  virtual ~HierarchyProto();

  HierarchyProto(const HierarchyProto& from);

  inline HierarchyProto& operator=(const HierarchyProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HierarchyProto& default_instance();

  static const HierarchyProto* internal_default_instance();

  void Swap(HierarchyProto* other);

  // implements Message ----------------------------------------------

  inline HierarchyProto* New() const { return New(NULL); }

  HierarchyProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HierarchyProto& from);
  void MergeFrom(const HierarchyProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HierarchyProto* other);
  void UnsafeMergeFrom(const HierarchyProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 size = 1;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // repeated .caffe2.PathProto paths = 2;
  int paths_size() const;
  void clear_paths();
  static const int kPathsFieldNumber = 2;
  const ::caffe2::PathProto& paths(int index) const;
  ::caffe2::PathProto* mutable_paths(int index);
  ::caffe2::PathProto* add_paths();
  ::google::protobuf::RepeatedPtrField< ::caffe2::PathProto >*
      mutable_paths();
  const ::google::protobuf::RepeatedPtrField< ::caffe2::PathProto >&
      paths() const;

  // @@protoc_insertion_point(class_scope:caffe2.HierarchyProto)
 private:
  inline void set_has_size();
  inline void clear_has_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::caffe2::PathProto > paths_;
  ::google::protobuf::int32 size_;
  friend void  protobuf_InitDefaults_caffe2_2fproto_2fhsm_2eproto_impl();
  friend void  protobuf_AddDesc_caffe2_2fproto_2fhsm_2eproto_impl();
  friend void protobuf_AssignDesc_caffe2_2fproto_2fhsm_2eproto();
  friend void protobuf_ShutdownFile_caffe2_2fproto_2fhsm_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HierarchyProto> HierarchyProto_default_instance_;

// -------------------------------------------------------------------

class PathProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:caffe2.PathProto) */ {
 public:
  PathProto();
  virtual ~PathProto();

  PathProto(const PathProto& from);

  inline PathProto& operator=(const PathProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PathProto& default_instance();

  static const PathProto* internal_default_instance();

  void Swap(PathProto* other);

  // implements Message ----------------------------------------------

  inline PathProto* New() const { return New(NULL); }

  PathProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PathProto& from);
  void MergeFrom(const PathProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PathProto* other);
  void UnsafeMergeFrom(const PathProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 word_id = 1;
  bool has_word_id() const;
  void clear_word_id();
  static const int kWordIdFieldNumber = 1;
  ::google::protobuf::int32 word_id() const;
  void set_word_id(::google::protobuf::int32 value);

  // repeated .caffe2.PathNodeProto path_nodes = 2;
  int path_nodes_size() const;
  void clear_path_nodes();
  static const int kPathNodesFieldNumber = 2;
  const ::caffe2::PathNodeProto& path_nodes(int index) const;
  ::caffe2::PathNodeProto* mutable_path_nodes(int index);
  ::caffe2::PathNodeProto* add_path_nodes();
  ::google::protobuf::RepeatedPtrField< ::caffe2::PathNodeProto >*
      mutable_path_nodes();
  const ::google::protobuf::RepeatedPtrField< ::caffe2::PathNodeProto >&
      path_nodes() const;

  // @@protoc_insertion_point(class_scope:caffe2.PathProto)
 private:
  inline void set_has_word_id();
  inline void clear_has_word_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::caffe2::PathNodeProto > path_nodes_;
  ::google::protobuf::int32 word_id_;
  friend void  protobuf_InitDefaults_caffe2_2fproto_2fhsm_2eproto_impl();
  friend void  protobuf_AddDesc_caffe2_2fproto_2fhsm_2eproto_impl();
  friend void protobuf_AssignDesc_caffe2_2fproto_2fhsm_2eproto();
  friend void protobuf_ShutdownFile_caffe2_2fproto_2fhsm_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PathProto> PathProto_default_instance_;

// -------------------------------------------------------------------

class PathNodeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:caffe2.PathNodeProto) */ {
 public:
  PathNodeProto();
  virtual ~PathNodeProto();

  PathNodeProto(const PathNodeProto& from);

  inline PathNodeProto& operator=(const PathNodeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PathNodeProto& default_instance();

  static const PathNodeProto* internal_default_instance();

  void Swap(PathNodeProto* other);

  // implements Message ----------------------------------------------

  inline PathNodeProto* New() const { return New(NULL); }

  PathNodeProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PathNodeProto& from);
  void MergeFrom(const PathNodeProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PathNodeProto* other);
  void UnsafeMergeFrom(const PathNodeProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // optional int32 length = 2;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 2;
  ::google::protobuf::int32 length() const;
  void set_length(::google::protobuf::int32 value);

  // optional int32 target = 3;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 3;
  ::google::protobuf::int32 target() const;
  void set_target(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:caffe2.PathNodeProto)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_length();
  inline void clear_has_length();
  inline void set_has_target();
  inline void clear_has_target();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 length_;
  ::google::protobuf::int32 target_;
  friend void  protobuf_InitDefaults_caffe2_2fproto_2fhsm_2eproto_impl();
  friend void  protobuf_AddDesc_caffe2_2fproto_2fhsm_2eproto_impl();
  friend void protobuf_AssignDesc_caffe2_2fproto_2fhsm_2eproto();
  friend void protobuf_ShutdownFile_caffe2_2fproto_2fhsm_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PathNodeProto> PathNodeProto_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NodeProto

// repeated .caffe2.NodeProto children = 1;
inline int NodeProto::children_size() const {
  return children_.size();
}
inline void NodeProto::clear_children() {
  children_.Clear();
}
inline const ::caffe2::NodeProto& NodeProto::children(int index) const {
  // @@protoc_insertion_point(field_get:caffe2.NodeProto.children)
  return children_.Get(index);
}
inline ::caffe2::NodeProto* NodeProto::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:caffe2.NodeProto.children)
  return children_.Mutable(index);
}
inline ::caffe2::NodeProto* NodeProto::add_children() {
  // @@protoc_insertion_point(field_add:caffe2.NodeProto.children)
  return children_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::caffe2::NodeProto >*
NodeProto::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:caffe2.NodeProto.children)
  return &children_;
}
inline const ::google::protobuf::RepeatedPtrField< ::caffe2::NodeProto >&
NodeProto::children() const {
  // @@protoc_insertion_point(field_list:caffe2.NodeProto.children)
  return children_;
}

// repeated int32 word_ids = 2;
inline int NodeProto::word_ids_size() const {
  return word_ids_.size();
}
inline void NodeProto::clear_word_ids() {
  word_ids_.Clear();
}
inline ::google::protobuf::int32 NodeProto::word_ids(int index) const {
  // @@protoc_insertion_point(field_get:caffe2.NodeProto.word_ids)
  return word_ids_.Get(index);
}
inline void NodeProto::set_word_ids(int index, ::google::protobuf::int32 value) {
  word_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:caffe2.NodeProto.word_ids)
}
inline void NodeProto::add_word_ids(::google::protobuf::int32 value) {
  word_ids_.Add(value);
  // @@protoc_insertion_point(field_add:caffe2.NodeProto.word_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NodeProto::word_ids() const {
  // @@protoc_insertion_point(field_list:caffe2.NodeProto.word_ids)
  return word_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NodeProto::mutable_word_ids() {
  // @@protoc_insertion_point(field_mutable_list:caffe2.NodeProto.word_ids)
  return &word_ids_;
}

// optional int32 offset = 3;
inline bool NodeProto::has_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NodeProto::set_has_offset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NodeProto::clear_has_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NodeProto::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline ::google::protobuf::int32 NodeProto::offset() const {
  // @@protoc_insertion_point(field_get:caffe2.NodeProto.offset)
  return offset_;
}
inline void NodeProto::set_offset(::google::protobuf::int32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:caffe2.NodeProto.offset)
}

// optional string name = 4;
inline bool NodeProto::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NodeProto::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NodeProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NodeProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& NodeProto::name() const {
  // @@protoc_insertion_point(field_get:caffe2.NodeProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:caffe2.NodeProto.name)
}
inline void NodeProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:caffe2.NodeProto.name)
}
inline void NodeProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:caffe2.NodeProto.name)
}
inline ::std::string* NodeProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:caffe2.NodeProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeProto::release_name() {
  // @@protoc_insertion_point(field_release:caffe2.NodeProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:caffe2.NodeProto.name)
}

// repeated float scores = 5;
inline int NodeProto::scores_size() const {
  return scores_.size();
}
inline void NodeProto::clear_scores() {
  scores_.Clear();
}
inline float NodeProto::scores(int index) const {
  // @@protoc_insertion_point(field_get:caffe2.NodeProto.scores)
  return scores_.Get(index);
}
inline void NodeProto::set_scores(int index, float value) {
  scores_.Set(index, value);
  // @@protoc_insertion_point(field_set:caffe2.NodeProto.scores)
}
inline void NodeProto::add_scores(float value) {
  scores_.Add(value);
  // @@protoc_insertion_point(field_add:caffe2.NodeProto.scores)
}
inline const ::google::protobuf::RepeatedField< float >&
NodeProto::scores() const {
  // @@protoc_insertion_point(field_list:caffe2.NodeProto.scores)
  return scores_;
}
inline ::google::protobuf::RepeatedField< float >*
NodeProto::mutable_scores() {
  // @@protoc_insertion_point(field_mutable_list:caffe2.NodeProto.scores)
  return &scores_;
}

inline const NodeProto* NodeProto::internal_default_instance() {
  return &NodeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TreeProto

// optional .caffe2.NodeProto root_node = 1;
inline bool TreeProto::has_root_node() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreeProto::set_has_root_node() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreeProto::clear_has_root_node() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreeProto::clear_root_node() {
  if (root_node_ != NULL) root_node_->::caffe2::NodeProto::Clear();
  clear_has_root_node();
}
inline const ::caffe2::NodeProto& TreeProto::root_node() const {
  // @@protoc_insertion_point(field_get:caffe2.TreeProto.root_node)
  return root_node_ != NULL ? *root_node_
                         : *::caffe2::NodeProto::internal_default_instance();
}
inline ::caffe2::NodeProto* TreeProto::mutable_root_node() {
  set_has_root_node();
  if (root_node_ == NULL) {
    root_node_ = new ::caffe2::NodeProto;
  }
  // @@protoc_insertion_point(field_mutable:caffe2.TreeProto.root_node)
  return root_node_;
}
inline ::caffe2::NodeProto* TreeProto::release_root_node() {
  // @@protoc_insertion_point(field_release:caffe2.TreeProto.root_node)
  clear_has_root_node();
  ::caffe2::NodeProto* temp = root_node_;
  root_node_ = NULL;
  return temp;
}
inline void TreeProto::set_allocated_root_node(::caffe2::NodeProto* root_node) {
  delete root_node_;
  root_node_ = root_node;
  if (root_node) {
    set_has_root_node();
  } else {
    clear_has_root_node();
  }
  // @@protoc_insertion_point(field_set_allocated:caffe2.TreeProto.root_node)
}

inline const TreeProto* TreeProto::internal_default_instance() {
  return &TreeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// HierarchyProto

// optional int32 size = 1;
inline bool HierarchyProto::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HierarchyProto::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HierarchyProto::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HierarchyProto::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 HierarchyProto::size() const {
  // @@protoc_insertion_point(field_get:caffe2.HierarchyProto.size)
  return size_;
}
inline void HierarchyProto::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:caffe2.HierarchyProto.size)
}

// repeated .caffe2.PathProto paths = 2;
inline int HierarchyProto::paths_size() const {
  return paths_.size();
}
inline void HierarchyProto::clear_paths() {
  paths_.Clear();
}
inline const ::caffe2::PathProto& HierarchyProto::paths(int index) const {
  // @@protoc_insertion_point(field_get:caffe2.HierarchyProto.paths)
  return paths_.Get(index);
}
inline ::caffe2::PathProto* HierarchyProto::mutable_paths(int index) {
  // @@protoc_insertion_point(field_mutable:caffe2.HierarchyProto.paths)
  return paths_.Mutable(index);
}
inline ::caffe2::PathProto* HierarchyProto::add_paths() {
  // @@protoc_insertion_point(field_add:caffe2.HierarchyProto.paths)
  return paths_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::caffe2::PathProto >*
HierarchyProto::mutable_paths() {
  // @@protoc_insertion_point(field_mutable_list:caffe2.HierarchyProto.paths)
  return &paths_;
}
inline const ::google::protobuf::RepeatedPtrField< ::caffe2::PathProto >&
HierarchyProto::paths() const {
  // @@protoc_insertion_point(field_list:caffe2.HierarchyProto.paths)
  return paths_;
}

inline const HierarchyProto* HierarchyProto::internal_default_instance() {
  return &HierarchyProto_default_instance_.get();
}
// -------------------------------------------------------------------

// PathProto

// optional int32 word_id = 1;
inline bool PathProto::has_word_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PathProto::set_has_word_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PathProto::clear_has_word_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PathProto::clear_word_id() {
  word_id_ = 0;
  clear_has_word_id();
}
inline ::google::protobuf::int32 PathProto::word_id() const {
  // @@protoc_insertion_point(field_get:caffe2.PathProto.word_id)
  return word_id_;
}
inline void PathProto::set_word_id(::google::protobuf::int32 value) {
  set_has_word_id();
  word_id_ = value;
  // @@protoc_insertion_point(field_set:caffe2.PathProto.word_id)
}

// repeated .caffe2.PathNodeProto path_nodes = 2;
inline int PathProto::path_nodes_size() const {
  return path_nodes_.size();
}
inline void PathProto::clear_path_nodes() {
  path_nodes_.Clear();
}
inline const ::caffe2::PathNodeProto& PathProto::path_nodes(int index) const {
  // @@protoc_insertion_point(field_get:caffe2.PathProto.path_nodes)
  return path_nodes_.Get(index);
}
inline ::caffe2::PathNodeProto* PathProto::mutable_path_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:caffe2.PathProto.path_nodes)
  return path_nodes_.Mutable(index);
}
inline ::caffe2::PathNodeProto* PathProto::add_path_nodes() {
  // @@protoc_insertion_point(field_add:caffe2.PathProto.path_nodes)
  return path_nodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::caffe2::PathNodeProto >*
PathProto::mutable_path_nodes() {
  // @@protoc_insertion_point(field_mutable_list:caffe2.PathProto.path_nodes)
  return &path_nodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::caffe2::PathNodeProto >&
PathProto::path_nodes() const {
  // @@protoc_insertion_point(field_list:caffe2.PathProto.path_nodes)
  return path_nodes_;
}

inline const PathProto* PathProto::internal_default_instance() {
  return &PathProto_default_instance_.get();
}
// -------------------------------------------------------------------

// PathNodeProto

// optional int32 index = 1;
inline bool PathNodeProto::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PathNodeProto::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PathNodeProto::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PathNodeProto::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 PathNodeProto::index() const {
  // @@protoc_insertion_point(field_get:caffe2.PathNodeProto.index)
  return index_;
}
inline void PathNodeProto::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:caffe2.PathNodeProto.index)
}

// optional int32 length = 2;
inline bool PathNodeProto::has_length() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PathNodeProto::set_has_length() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PathNodeProto::clear_has_length() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PathNodeProto::clear_length() {
  length_ = 0;
  clear_has_length();
}
inline ::google::protobuf::int32 PathNodeProto::length() const {
  // @@protoc_insertion_point(field_get:caffe2.PathNodeProto.length)
  return length_;
}
inline void PathNodeProto::set_length(::google::protobuf::int32 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:caffe2.PathNodeProto.length)
}

// optional int32 target = 3;
inline bool PathNodeProto::has_target() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PathNodeProto::set_has_target() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PathNodeProto::clear_has_target() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PathNodeProto::clear_target() {
  target_ = 0;
  clear_has_target();
}
inline ::google::protobuf::int32 PathNodeProto::target() const {
  // @@protoc_insertion_point(field_get:caffe2.PathNodeProto.target)
  return target_;
}
inline void PathNodeProto::set_target(::google::protobuf::int32 value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:caffe2.PathNodeProto.target)
}

inline const PathNodeProto* PathNodeProto::internal_default_instance() {
  return &PathNodeProto_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace caffe2

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_caffe2_2fproto_2fhsm_2eproto__INCLUDED
